<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Divine</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wifishark.github.io/"/>
  <updated>2019-04-20T13:57:49.983Z</updated>
  <id>https://wifishark.github.io/</id>
  
  <author>
    <name>Divine</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>lvs+keepalived</title>
    <link href="https://wifishark.github.io/2019/04/20/lvs-keepalived/"/>
    <id>https://wifishark.github.io/2019/04/20/lvs-keepalived/</id>
    <published>2019-04-20T13:56:45.000Z</published>
    <updated>2019-04-20T13:57:49.983Z</updated>
    
    <content type="html"><![CDATA[<p>注意<br>    1、两者使用的系统必须一致，此实验如下图<br>    2、一定要关闭防火墙进行测试<br>    3、一定要通过start/stop来管理keepalived，不要通过restart<br>    4、VIP绑定的那个物理网卡一定要使用仅主机模式，不要使用nat模式！！！！！</p><h2 id="LB调度器"><a href="#LB调度器" class="headerlink" title="LB调度器"></a>LB调度器</h2><h3 id="关闭firewalld与selinux"><a href="#关闭firewalld与selinux" class="headerlink" title="关闭firewalld与selinux"></a>关闭firewalld与selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">$ setenforce 0 &amp;&amp; sed  <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h3 id="安装keepalived"><a href="#安装keepalived" class="headerlink" title="安装keepalived"></a>安装keepalived</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install keepalived -y</span><br></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/keepalived/keepalived.conf</span><br><span class="line">    ! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">    global_defs &#123;</span><br><span class="line">        notification_email &#123;   <span class="comment">#监控keepalive,当出现错误时,会发送邮件</span></span><br><span class="line">            acassen@firewall.loc</span><br><span class="line">            failover@firewall.loc</span><br><span class="line">             sysadmin@firewall.loc</span><br><span class="line">           &#125;</span><br><span class="line">           notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">           smtp_server 192.168.200.1</span><br><span class="line">           smtp_connect_timeout 30</span><br><span class="line">           router_id LVS_1</span><br><span class="line">           vrrp_skip_check_adv_addr</span><br><span class="line">           vrrp_strict</span><br><span class="line">           vrrp_garp_interval 0</span><br><span class="line">           vrrp_gna_interval 0</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        vrrp_instance VI_1 &#123;</span><br><span class="line">            state MASTER           <span class="comment">#标记路由器状态</span></span><br><span class="line">            interface ens33         <span class="comment">#绑定ip地址的接口</span></span><br><span class="line">            virtual_router_id 51    <span class="comment">#高可用keepalived组必须一致</span></span><br><span class="line">            priority 150               <span class="comment">#优先级，优先级越高越优，建议相差50CCCC</span></span><br><span class="line">            advert_int 1                <span class="comment">#组播信息发送间隔，两个节点需一致</span></span><br><span class="line">            authentication &#123;          <span class="comment">#keepalive组之间的消息认证</span></span><br><span class="line">                auth_type PASS</span><br><span class="line">                auth_pass 1111</span><br><span class="line">            &#125;</span><br><span class="line">            virtual_ipaddress &#123;     <span class="comment">#设置VIP，两个节点需一致</span></span><br><span class="line">                192.168.211.100/24</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        vrrp_instance VI_2 &#123;</span><br><span class="line">            state BACKUP</span><br><span class="line">            interface ens33       </span><br><span class="line">            virtual_router_id 52   <span class="comment">#多实例下router_id不能一致</span></span><br><span class="line">            priority 50          </span><br><span class="line">            advert_int 1</span><br><span class="line">            authentication &#123;      </span><br><span class="line">                auth_type PASS</span><br><span class="line">                auth_pass 1111</span><br><span class="line">            &#125;</span><br><span class="line">            virtual_ipaddress &#123;</span><br><span class="line">                192.168.1.100/24</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#设置虚拟ip服务</span></span><br><span class="line">        virtual_server 192.168.211.100 80 &#123;</span><br><span class="line">            delay_loop 6       <span class="comment">#设定检查间隔</span></span><br><span class="line">            lb_algo rr            <span class="comment">#指定LVS算法</span></span><br><span class="line">            lb_kind NAT       <span class="comment">#指定LVS模式</span></span><br><span class="line">            nat_mask 255.255.255.0 </span><br><span class="line">            persistence_timeout 50    <span class="comment">#持久连接设置，会话保持时间</span></span><br><span class="line">            protocol TCP          <span class="comment">#转发协议为TCP</span></span><br><span class="line">        </span><br><span class="line">            real_server 10.0.0.22 80 &#123;   </span><br><span class="line">               weight 1    <span class="comment">#后端实际TCP服务配置</span></span><br><span class="line">            &#125;</span><br><span class="line">         </span><br><span class="line">           real_server 10.0.0.23 80 &#123;</span><br><span class="line">              weight 1</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;注意&lt;br&gt;    1、两者使用的系统必须一致，此实验如下图&lt;br&gt;    2、一定要关闭防火墙进行测试&lt;br&gt;    3、一定要通过start/stop来管理keepalived，不要通过restart&lt;br&gt;    4、VIP绑定的那个物理网卡一定要使用仅主机模式，不要
      
    
    </summary>
    
      <category term="lvs" scheme="https://wifishark.github.io/categories/lvs/"/>
    
    
      <category term="lvs" scheme="https://wifishark.github.io/tags/lvs/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wifishark.github.io/2019/04/20/hello-world/"/>
    <id>https://wifishark.github.io/2019/04/20/hello-world/</id>
    <published>2019-04-20T02:21:15.117Z</published>
    <updated>2019-04-20T05:21:38.918Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kubeadm快速部署kubernetes</title>
    <link href="https://wifishark.github.io/2019/02/01/kubeadm%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2kubernetes/"/>
    <id>https://wifishark.github.io/2019/02/01/kubeadm快速部署kubernetes/</id>
    <published>2019-02-01T13:02:55.000Z</published>
    <updated>2019-04-22T01:27:42.807Z</updated>
    
    <content type="html"><![CDATA[<p>kubeadm是官方社区推出的一个用于快速部署kubernetes集群的工具。</p><p>这个工具能通过两条指令完成一个kubernetes集群的部署：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个 Master 节点</span><br><span class="line">$ kubeadm init</span><br><span class="line"></span><br><span class="line"># 将一个 Node 节点加入到当前集群中</span><br><span class="line">$ kubeadm join &lt;Master节点的IP和端口 &gt;</span><br></pre></td></tr></table></figure><p><a name="d9bc8687"></a></p><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><p>在开始之前，部署Kubernetes集群机器需要满足以下几个条件：</p><ul><li>一台或多台机器，操作系统 CentOS7.x-86_x64</li><li>硬件配置：2GB或更多RAM，2个CPU或更多CPU，硬盘30GB或更多</li><li>集群中所有机器之间网络互通</li><li>可以访问外网，需要拉取镜像</li><li>禁止swap分区</li></ul><p><a name="067b3d5b"></a></p><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ol><li>在所有节点上安装Docker和kubeadm</li><li>部署Kubernetes Master</li><li>部署容器网络插件</li><li>部署 Kubernetes Node，将节点加入Kubernetes集群中</li><li>部署Dashboard Web页面，可视化查看Kubernetes资源</li></ol><p><a name="a9421500"></a></p><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><pre><code>Kubernetes 架构图</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">关闭防火墙：</span><br><span class="line">$ systemctl stop firewalld</span><br><span class="line">$ systemctl disable firewalld</span><br><span class="line"></span><br><span class="line">关闭selinux：</span><br><span class="line">$ sed -i &apos;s/enforcing/disabled/&apos; /etc/selinux/config </span><br><span class="line">$ setenforce 0</span><br><span class="line"></span><br><span class="line">关闭swap：</span><br><span class="line">$ swapoff -a  $ 临时</span><br><span class="line">$ vim /etc/fstab  $ 永久</span><br><span class="line"></span><br><span class="line">添加主机名与IP对应关系（记得设置主机名）：</span><br><span class="line">$ cat /etc/hosts</span><br><span class="line">192.168.137.5 k8s-master</span><br><span class="line">192.168.137.100 k8s-node1</span><br><span class="line">192.168.137.101 k8s-node2</span><br><span class="line"></span><br><span class="line">将桥接的IPv4流量传递到iptables的链：</span><br><span class="line">$ cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">$ sysctl --system</span><br></pre></td></tr></table></figure><p><a name="e9c11f4d"></a></p><h2 id="所有节点安装Docker-kubeadm-kubelet"><a href="#所有节点安装Docker-kubeadm-kubelet" class="headerlink" title="所有节点安装Docker/kubeadm/kubelet"></a>所有节点安装Docker/kubeadm/kubelet</h2><p>Kubernetes默认CRI（容器运行时）为Docker，因此先安装Docker。</p><p><a name="53057bed"></a></p><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">$ yum -y install docker-ce-18.06.1.ce-3.el7</span><br><span class="line">$ systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class="line">$ docker --version</span><br><span class="line">Docker version 18.06.1-ce, build e68fc7a</span><br></pre></td></tr></table></figure><p><a name="5f610077"></a></p><h3 id="添加阿里云YUM软件源"><a href="#添加阿里云YUM软件源" class="headerlink" title="添加阿里云YUM软件源"></a>添加阿里云YUM软件源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><a name="d581ebe2"></a></p><h3 id="安装kubeadm，kubelet和kubectl"><a href="#安装kubeadm，kubelet和kubectl" class="headerlink" title="安装kubeadm，kubelet和kubectl"></a>安装kubeadm，kubelet和kubectl</h3><p>由于版本更新频繁，这里指定版本号部署：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubelet-1.13.3 kubeadm-1.13.3 kubectl-1.13.3</span><br><span class="line">$ systemctl enable kubelet</span><br><span class="line">#kubeadm：初始化Cluster</span><br><span class="line">#kubelet：运行在Cluster上的所有节点，启动Pod和容器</span><br><span class="line">#kubectl：Kubernetes命令行工具</span><br></pre></td></tr></table></figure><p><a name="2ab38ac1"></a></p><p>##部署Kubernetes Master</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=192.168.137.5 \</span><br><span class="line">  --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version v1.13.3 \</span><br><span class="line">  --service-cidr=10.1.0.0/16\</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16</span><br><span class="line"> </span><br><span class="line"> #--apiserver-advertise-address=192.168.137.5：指定Master的哪个interface与Cluster的其他节点通信，如果不指定，则自动选择有默认GW的interface</span><br><span class="line"> #--pod-network-cidr=10.244.137.0/16：Pod网络范围，为了使用flannel方案，则必须设置此网段的CIDR</span><br><span class="line"> 1、kubeadm执行初始化检查</span><br><span class="line"> 2、生成token和证书</span><br><span class="line"> 3、生成KubeConfig文件，Kubelet需要用这个文件与Master通信</span><br><span class="line"> 4、安装Master组件，会从Google的Regisry下载组件的Dokcer镜像</span><br><span class="line"> 5、安装附加组件kube-proxy和kube-dns</span><br><span class="line"> 6、Kubernets初始化成功</span><br><span class="line"> </span><br><span class="line"> ！！ kubectl get pods -n kube-system检测镜像是否下载成功</span><br><span class="line"> ！！ kubectl delete pods kube-flannel-ds-amd64-s5t56 -n kube-system</span><br></pre></td></tr></table></figure><p>由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址。</p><p>使用kubectl工具：<br>推荐使用普通用户执行，root用户有些问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">$ kubectl get nodes</span><br></pre></td></tr></table></figure><p><a name="72a0eda4"></a></p><h2 id="安装Pod网络插件（CNI）"><a href="#安装Pod网络插件（CNI）" class="headerlink" title="安装Pod网络插件（CNI）"></a>安装Pod网络插件（CNI）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><p>确保能够访问到quay.io这个registery。</p><p><a name="fe838581"></a></p><h2 id="加入Kubernetes-Node"><a href="#加入Kubernetes-Node" class="headerlink" title="加入Kubernetes Node"></a>加入Kubernetes Node</h2><p>在node上执行！！！！！！！！！！！使用kubectl get node查看<br>向集群添加新节点，执行在kubeadm init输出（master上）的kubeadm join命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  kubeadm join 192.168.137.5:6443 --token hm2vby.27zp6mugvhaio2yu --discovery-token-ca-cert-hash sha256:4ae8da8f9c9319cb7980ea8f91b93baca34d77be67bcb35c89ef7faffae2bcbc</span><br><span class="line">#使用--node-name [string] 指定加入kubernetes集群的主机名</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2019/png/304339/1554879719133-691228d5-34d8-4eba-97fc-18190bc1eb4c.png#align=left&amp;display=inline&amp;height=88&amp;name=image.png&amp;originHeight=110&amp;originWidth=668&amp;size=12805&amp;status=done&amp;width=534" alt="image.png"><br></p><p><a name="03b77485"></a></p><h2 id="测试kubernetes集群"><a href="#测试kubernetes集群" class="headerlink" title="测试kubernetes集群"></a>测试kubernetes集群</h2><p>在Kubernetes集群中创建一个pod，验证是否正常运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create deployment nginx --image=nginx</span><br><span class="line">$ kubectl expose deployment nginx --port=80 --type=NodePort</span><br><span class="line">$ kubectl get pod,svc</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://NodeIP" target="_blank" rel="noopener">http://NodeIP</a>:Port</p><p><a name="51bce07d"></a></p><h2 id="部署-Dashboard"><a href="#部署-Dashboard" class="headerlink" title="部署 Dashboard"></a>部署 Dashboard</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>默认镜像国内无法访问，修改镜像地址为： lizhenliang/kubernetes-dashboard-amd64:v1.10.1</p><p>默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">      nodePort: 30001</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://NodeIP:30001" target="_blank" rel="noopener">http://NodeIP:30001</a></p><p>创建service account并绑定默认cluster-admin管理员集群角色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create serviceaccount dashboard-admin -n kube-system</span><br><span class="line">$ kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span><br><span class="line">$ kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk &apos;/dashboard-admin/&#123;print $1&#125;&apos;)</span><br></pre></td></tr></table></figure><p>使用输出的token登录Dashboard。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;kubeadm是官方社区推出的一个用于快速部署kubernetes集群的工具。&lt;/p&gt;
&lt;p&gt;这个工具能通过两条指令完成一个kubernetes集群的部署：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="kubernetes" scheme="https://wifishark.github.io/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://wifishark.github.io/tags/kubernetes/"/>
    
  </entry>
  
</feed>
